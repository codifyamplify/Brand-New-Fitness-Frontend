{"ast":null,"code":"var _jsxFileName = \"/Users/josiath/Development/Code/PROJECTS/Brand-New-Fitness-Frontend/src/componants/Card.js\";\nimport React, { useContext } from \"react\";\nimport { UserContext } from \"./context/user\";\n// will require some sort of user state data (assmuing exercise data will come with the association)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = () => {\n  // import context and store in variable\n  // const data = useContext(UserContext)\n  console.log(\"inside Card\");\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"USER EXERCISES STATE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"maybe will have to iterate over exercises array (inside card component) to list them all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"will need an unordered list for this\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: JSON.stringify(data)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useContext","UserContext","jsxDEV","_jsxDEV","Card","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","user","name","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/josiath/Development/Code/PROJECTS/Brand-New-Fitness-Frontend/src/componants/Card.js"],"sourcesContent":["import React, {useContext} from \"react\"\nimport { UserContext } from \"./context/user\"\n// will require some sort of user state data (assmuing exercise data will come with the association)\nconst Card = () => {\n    // import context and store in variable\n    // const data = useContext(UserContext)\n    console.log(\"inside Card\")\n    console.log(data)\n    return (\n        <div>\n            <h1>User Name:</h1>\n            <h2>{user.name}</h2>\n            <h3>USER EXERCISES STATE</h3>\n            <h4>maybe will have to iterate over exercises array (inside card component) to list them all</h4>\n            <h4>will need an unordered list for this</h4>\n            <h5>{JSON.stringify(data)}</h5>\n        </div>\n    )\n}\n\nexport default Card"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AACvC,SAASC,WAAW,QAAQ,gBAAgB;AAC5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACf;EACA;EACAC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC1BD,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;EACjB,oBACIJ,OAAA;IAAAK,QAAA,gBACIL,OAAA;MAAAK,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACnBT,OAAA;MAAAK,QAAA,EAAKK,IAAI,CAACC;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACpBT,OAAA;MAAAK,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC7BT,OAAA;MAAAK,QAAA,EAAI;IAAwF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACjGT,OAAA;MAAAK,QAAA,EAAI;IAAoC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC7CT,OAAA;MAAAK,QAAA,EAAKO,IAAI,CAACC,SAAS,CAACT,IAAI;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC7B;AAEd,CAAC;AAAAK,EAAA,GAfKb,IAAI;AAiBV,eAAeA,IAAI;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}